package szz.com.thirdworld;


import org.junit.Test;

import java.util.ArrayList;
import java.util.Arrays;

import szz.com.baselib.entity.UserInfo;

/**
 * Example local unit test, which will execute on the development machine (host).
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
public class ExampleUnitTest {

    @Test
    public void addition_isCorrect() throws Exception {
        ArrayList<String> strs = new ArrayList<>();
        strs.add("b0:ef:c5:c9:cd:c5:b6:d3:b5:c7:c8:eb:a1:fe:68:79:38:31:34:a1:fe:31:32:33:09:31:38:33:2e:36:30:2e:32:30:34:2e:31:36:09:31:38:33:2e:36:30:2e:32:30:34:2e:31:36");
        strs.add("cd:c5:b6:d3:b5:c7:c8:eb:a1:fe:34:a1:fe:31:31:31:a1:fe:bb:c3:a1:fe:32:a1:fe:c2:cc:d2:b0:cf:c9:d7:d9:a1:fe:33:a1:fe:32:30:31:37:2d:30:38:2d:32:38:20:31:31:3a:30:30:3a:35:35:a3:bb:30:34:2d:32:a3:ac:32:30:31:37:2d:30:38:2d:32:38:20:31:31:3a:30:30:3a:35:35:a3:bb:30:34:2d:32:a3:ac:32:30:31:37:2d:30:38:2d:32:38:20:31:31:3a:30:30:3a:35:35:a3:bb:30:34:2d:32:a3:ac:ce:de:a3:ac:ce:de:a1:fe:31:38:34:20:31:38:36:20:32:30:34:20:32:39:33:a1:fe:31:36:20:39:20:31:37:20:39:a1:fe:30:20:30:20:30:20:30:a1:fe:35:30:30:20:35:30:30:20:35:30:30:20:35:30:30:a1:fe:32:31:30:30:a1:fe:32:31:30:30:a1:fe:32:31:30:30:a1:fe:32:31:30:30:a1:fe:32:30:31:37:c4:ea:38:d4:c2:32:38:c8:d5:31:31:ca:b1:34:b7:d6:32:39:c3:eb:a1:fe:cc:d2:bb:a8:d4:b4:20:31:20:32:20:39:a1:f9:bb:a8:b6:f9:ba:ec:20:31:39:31:34:37:30:20:31:39:33:35:37:30:20:31:35:39:31:30:30:20:31:35:39:33:34:30:20:34:30:37:38:30:30:20:35:34:37:30:39:30:20:32:31:35:30:37:30:38:20:30:20:31:30:30:30:30:30:30:30:20:31:30:30:30:30:30:30:30:20:38:33:34:37:31:34:35:20:38:32:34:33:36:30:32:a1:fe:38:36:36:32:38:a1:fe:37:32:33:30:38:a1:fe:38:37:32:33:30:38:a1:fe:31:30:31:a1:fe:32:30:35:32:30:a1:fe:33:31:39:32:30:a1:fe:30:a1:fe:32:31:39:37:31:38:a1:fe:36:a1:fe:30:20:30:20:30:20:30:20:30:a1:fe:39:33:a1:fe:39:31:38:31:31:a1:fe:c7:e0:cd:ad:bd:a3:20:31:20:35:20:31:30:20:35:20:35:20:31:31:39:38:38:20:33:30:30:31:20:31:30:31:a3:ac:f2:bf:d3:c8:b7:ef:d3:f0:d1:a5:20:30:20:31:32:37:20:31:32:36:20:31:32:39:20:32:35:31:20:31:32:30:30:32:20:33:30:30:34:20:36:30:34:a3:ac:c7:e0:cd:ad:ee:f8:20:34:20:34:20:35:20:31:30:20:34:20:31:31:39:38:37:20:33:30:30:32:20:31:30:32:a3:ac:c7:e0:cd:ad:bf:f8:20:32:20:39:20:35:20:35:20:34:20:31:31:39:38:39:20:33:30:30:33:20:31:30:33:a3:ac:a1:fe:33:31:38:33:39:32:33:a1:fe:32:31:31:20:33:35:34:20:37:31:20:30:a1:fe:30:a1:fe:30:a1:fe:31:a1:fe:30:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:a1:fe:30");
        strs.add("0");
        strs.add("0");
        strs.add("0");
        strs.add("0");
        strs.add("0");
        strs.add("0");
        strs.add("0");
        strs.add("0");
        byte[] bts;
        String s;
        for (String str : strs) {
            bts = hexStringToBytes(str);
            s = new String(bts, "gbk");
            logLn(s);
        }
    }

    @Test
    public void t2() {
        String s = "帮派个人资料返回〓hy814〓3※有时很忙〓无〓无〓52491 0 91535 20800 20800〓白发妖姬 土 64000 0 136295 0〓正常〓0.0000〓177966 177966 177966 177966 182966〓18510〓2949654〓0〓140〓5709〓3〓2319〓5418〓568〓5234〓5972〓121〓72〓12〓30〓4296162〓0〓0〓1905.0968〓4160 4472 4192 4284 4080 4456 4180 4276〓6000〓0〓1999〓124〓9588 10345 10196 9947 9588 10345 10196 9947〓2017-05-20〓2288869〓16〓27〓999〓0〓999〓1 1 1〓1442〓3136 3156 3137 3117 3007 3004 2992 3038〓2871〓1〓5〓0 0 0 0 0 0 0 0〓60 60 60 60 60 60 60 60〓155484〓0〓无〓无〓无〓0〓112〓4785 4650 4384 1362 4785 4650 4384 1362〓0 0 0 0 0 0 0 0〓120 60 240 180 120 60 240 180〓未知属性9〓未知属性10〓4〓93198〓80〓114962〓42645〓42645〓110〓2521 120 311";
        String[] strings = s.split("〓");
        String s2 = "帮派个人资料返回〓hy815〓有时候很忙〓打杂杂〓普通成员〓1 0 1000 4838 1150〓※★第1届赛宠 水 64000 45150 43093 0〓正常〓0.0000〓137329 137624 137342 137363 137377〓23905〓811382〓0〓112〓295919〓0〓1418〓1677〓3513〓1692〓275〓0〓0〓0〓0〓487423〓5〓5〓1513.1039〓1395 1275 1350 1275 1365 1350 1395 1320〓0〓999〓18773〓100〓917 932 1014 918 917 932 1014 918〓2017-05-23〓76016〓5〓0〓0〓10〓999〓1 1 0〓588〓253 261 267 265 260 265 257 259〓284〓0〓0〓0 0 0 0 0 0 0 0〓0 0 0 0 0 0 0 0〓0〓1〓无〓无〓无〓0〓92〓3004 2794 593 443 3004 2794 593 443〓0 0 0 0 0 0 0 0〓0 0 0 0 0 0 0 0〓未知属性9〓未知属性10〓41〓2015021〓0〓38050〓0〓0〓90〓140 31 50";
        String[] strings2 = s2.split("〓");
        int i = 0;
        for (String string : strings) {
            log(string + "\t");
            logLn(strings2[i++]);
        }

    }

    @Test
    public void t4() {
        boolean str = true ^ false;
        System.out.println(str);
        str = true ^ true;
        System.out.println(str);
        str = false ^ false;
        System.out.println(str);
        str = false ^ true;
        System.out.println(str);
    }

    @Test
    public void t3() {
        String s = "帮派个人资料返回〓hy814〓3※有时很忙〓无〓无〓52491 0 91535 20800 20800〓白发妖姬 土 64000 0 136295 0〓正常〓0.0000〓177966 177966 177966 177966 182966〓18510〓2949654〓0〓140〓5709〓3〓2319〓5418〓568〓5234〓5972〓121〓72〓12〓30〓4296162〓0〓0〓1905.0968〓4160 4472 4192 4284 4080 4456 4180 4276〓6000〓0〓1999〓124〓9588 10345 10196 9947 9588 10345 10196 9947〓2017-05-20〓2288869〓16〓27〓999〓0〓999〓1 1 1〓1442〓3136 3156 3137 3117 3007 3004 2992 3038〓2871〓1〓5〓0 0 0 0 0 0 0 0〓60 60 60 60 60 60 60 60〓155484〓0〓无〓无〓无〓0〓112〓4785 4650 4384 1362 4785 4650 4384 1362〓0 0 0 0 0 0 0 0〓120 60 240 180 120 60 240 180〓未知属性9〓未知属性10〓4〓93198〓80〓114962〓42645〓42645〓110〓2521 120 311";
        UserInfo userInfo = UserInfo.parse(s);
        logLn(userInfo.toString());
        String s2 = "帮派个人资料返回〓hy815〓有时候很忙〓打杂杂〓普通成员〓1 0 1000 4838 1150〓※★第1届赛宠 水 64000 45150 43093 0〓正常〓0.0000〓137329 137624 137342 137363 137377〓23905〓811382〓0〓112〓295919〓0〓1418〓1677〓3513〓1692〓275〓0〓0〓0〓0〓487423〓5〓5〓1513.1039〓1395 1275 1350 1275 1365 1350 1395 1320〓0〓999〓18773〓100〓917 932 1014 918 917 932 1014 918〓2017-05-23〓76016〓5〓0〓0〓10〓999〓1 1 0〓588〓253 261 267 265 260 265 257 259〓284〓0〓0〓0 0 0 0 0 0 0 0〓0 0 0 0 0 0 0 0〓0〓1〓无〓无〓无〓0〓92〓3004 2794 593 443 3004 2794 593 443〓0 0 0 0 0 0 0 0〓0 0 0 0 0 0 0 0〓未知属性9〓未知属性10〓41〓2015021〓0〓38050〓0〓0〓90〓140 31 50";
        userInfo = UserInfo.parse(s2);
        logLn(userInfo.toString());

    }

    @Test
    public void t1() {
//        签到〓183.60.204.16
//        公告	183.60.204.16	183.60.204.16
//        帮派个人资料〓hy814〓123〓〓〓〓设备验证	183.60.204.16	183.60.204.16
//        帮派个人资料返回〓hy814〓3※有时很忙〓无〓无〓52491 0 91535 20800 20800〓白发妖姬 土 64000 0 136295 0〓正常〓0.0000〓177966 177966 177966 177966 182966〓18510〓2949654〓0〓140〓5709〓3〓2319〓5418〓568〓5234〓5972〓121〓72〓12〓30〓4296162〓0〓0〓1905.0968〓4160 4472 4192 4284 4080 4456 4180 4276〓6000〓0〓1999〓124〓9588 10345 10196 9947 9588 10345 10196 9947〓2017-05-20〓2288869〓16〓27〓999〓0〓999〓1 1 1〓1442〓3136 3156 3137 3117 3007 3004 2992 3038〓2871〓1〓5〓0 0 0 0 0 0 0 0〓60 60 60 60 60 60 60 60〓155484〓0〓无〓无〓无〓0〓112〓4785 4650 4384 1362 4785 4650 4384 1362〓0 0 0 0 0 0 0 0〓120 60 240 180 120 60 240 180〓未知属性9〓未知属性10〓4〓93198〓80〓114962〓42645〓42645〓110〓2521 120 311
//        帮派个人资料返回〓hy814〓3※有时很忙〓无〓无〓52491 0 91535 20800 20800〓白发妖姬 土 64000 0 136295 0〓正常〓0.0000〓177966 177966 177966 177966 182966〓18510〓2950659〓0〓140〓5709〓3〓2319〓5418〓568〓5234〓5972〓121〓72〓12〓30〓4296162〓0〓0〓1905.0968〓4160 4472 4192 4284 4080 4456 4180 4276〓6000〓0〓1999〓124〓9588 10345 10196 9947 9588 10345 10196 9947〓2017-05-20〓2288869〓16〓27〓999〓0〓999〓1 1 1〓1442〓3136 3156 3137 3117 3007 3004 2992 3038〓2861〓1〓5〓0 0 0 0 0 0 0 0〓60 60 60 60 60 60 60 60〓155484〓0〓无〓无〓无〓1〓112〓4785 4650 4384 1362 4785 4650 4384 1362〓0 0 0 0 0 0 0 0〓120 60 240 180 120 60 240 180〓未知属性9〓未知属性10〓4〓93198〓80〓114962〓42645〓42645〓110〓2521 120 311
//        盟军副本十二宫读取地图〓hy814〓123	183.60.204.16	183.60.204.16
//        帮派副本十二宫地图〓323232323200000000000000
//        盟军副本十二宫重置次数〓hy814〓123〓261	183.60.204.16	183.60.204.16
//        帮派副本十二宫重置成功〓003232323200000000000000〓2861〓1
//
//        签到〓183.60.204.16
//        公告	183.60.204.16	183.60.204.16
//        帮派个人资料〓hy814〓123〓〓〓〓设备验证	183.60.204.16	183.60.204.16
//        盟军副本十二宫读取地图〓hy814〓123	183.60.204.16	183.60.204.16
//        帮派副本十二宫地图〓003232323200000000000000
        String s = "盟军个人每日活力任务查询〓33333333333〓30 30 30 49971 2400 495 16140 80 256 111 10〓4";
        String[] split = s.split("〓");
        char[] states = split[1].toCharArray();
        String[] datas = split[2].split(" ");
        logLn(states.length + "");
//        logLn(Arrays.deepToString(states));
        logLn(datas.length + "");
        for (char state : states) {
            if ('3' == state) {
                log("3");
            } else {
                log("其他");
            }

        }
        logLn(Arrays.deepToString(datas));
    }

    private static void logLn(String arg) {
        System.err.println(arg);
    }

    private static void log(String arg) {
        System.err.print(arg);
    }

    /**
     * Convert hex string to byte[]
     *
     * @param hexString the hex string
     * @return byte[]
     */
    public static byte[] hexStringToBytes(String hexString) {
        if (hexString == null || hexString.equals("")) {
            return null;
        }
        hexString = hexString.replace(":", "").toUpperCase();
        int length = hexString.length() / 2;
        char[] hexChars = hexString.toCharArray();
        byte[] d = new byte[length];
        for (int i = 0; i < length; i++) {
            int pos = i * 2;
            d[i] = (byte) (charToByte(hexChars[pos]) << 4 | charToByte(hexChars[pos + 1]));
        }
        return d;
    }

    /**
     * Convert char to byte
     *
     * @param c char
     * @return byte
     */
    private static byte charToByte(char c) {
        return (byte) "0123456789ABCDEF".indexOf(c);
    }


}